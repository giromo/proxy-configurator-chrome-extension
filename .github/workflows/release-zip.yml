name: Auto Clean ZIP for Chrome Extension Install (Fallback & Debug)

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # برای Release

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: npm ci --only=production  # فقط production deps (سریع‌تر)

      - name: Attempt build
        run: |
          echo "=== Attempting npm run build ==="
          npm run build || echo "Build failed - using fallback"

      - name: Debug folders
        run: |
          echo "=== Repo structure ==="
          ls -la
          echo "=== Dist contents ==="
          ls -la dist/ || echo "No dist folder"
          echo "=== Public contents ==="
          ls -la public/ || echo "No public folder"

      - name: Create clean extension package
        run: |
          mkdir -p clean-extension
          
          # کپی فایل‌های ضروری (fallback بدون build)
          cp manifest.json clean-extension/ 2>/dev/null || echo "manifest missing"
          cp public/background.js clean-extension/ 2>/dev/null || echo "background missing"
          cp public/index.html clean-extension/ 2>/dev/null || echo "index.html missing"
          
          # اگر dist/ وجود داشت، bundle.js و etc. رو اضافه کن
          if [ -f "dist/bundle.js" ]; then
            cp dist/bundle.js clean-extension/ 2>/dev/null
            cp dist/index.html clean-extension/ 2>/dev/null || cp public/index.html clean-extension/ 2>/dev/null
          fi
          
          # کپی icons
          mkdir -p clean-extension/icons
          cp public/icons/* clean-extension/icons/ 2>/dev/null || echo "icons missing"
          
          # حذف هر فایل اضافی (strict clean)
          find clean-extension -name "src*" -type d -exec rm -rf {} + 2>/dev/null
          find clean-extension -name "node_modules*" -type d -exec rm -rf {} + 2>/dev/null
          find clean-extension -name "README*" -type f -delete 2>/dev/null
          find clean-extension -name "LICENSE*" -type f -delete 2>/dev/null
          find clean-extension -name ".gitignore*" -type f -delete 2>/dev/null
          find clean-extension -name "package*" -type f -delete 2>/dev/null
          find clean-extension -name "tsconfig*" -type f -delete 2>/dev/null
          find clean-extension -name "webpack*" -type f -delete 2>/dev/null
          find clean-extension -name "tailwind*" -type f -delete 2>/dev/null
          find clean-extension -name ".github*" -type d -exec rm -rf {} + 2>/dev/null

          echo "=== Clean extension contents ==="
          ls -la clean-extension/

      - name: ZIP clean package
        run: |
          cd clean-extension
          zip -r ../proxy-configurator-v${{ github.ref_name }}.zip *
          cd ..
          echo "=== Final ZIP contents ==="
          unzip -l proxy-configurator-v${{ github.ref_name }}.zip

      - name: Create Release with clean ZIP only
        uses: softprops/action-gh-release@v2
        with:
          files: proxy-configurator-v${{ github.ref_name }}.zip
          tag_name: ${{ github.ref_name }}
          name: "v${{ github.ref_name }} - Clean Install ZIP"
          body: |
            ### Clean ZIP for Chrome Extension Install
            
            **فقط فایل‌های ضروری:**
            - manifest.json
            - background.js
            - index.html
            - bundle.js (if built)
            - icons/
            
            **بدون:** src/, README, LICENSE, node_modules, .github, etc.
            
            **نصب:**
            1. دانلود ZIP
            2. unzip (فایل‌ها در root)
            3. chrome://extensions/ → Developer Mode → Load unpacked → پوشه
            
            Check Actions tab for build logs.
          generate_release_notes: false  # غیرفعال ZIP خودکار
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
