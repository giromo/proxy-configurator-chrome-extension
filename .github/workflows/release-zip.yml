name: Simple Clean ZIP for Chrome Extension (No Full Repo)

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install deps (optional for build)
        run: npm ci --only=production || echo "Skipping install for fallback"

      - name: Debug:Current repo files
        run: |
          echo "=== All files in repo ==="
          find . -maxdepth 2 -type f | head -20 || echo "No files found"

      - name: Create clean extension folder (only essential files)
        run: |
          mkdir -p clean-extension
          
          # کپی فایل‌های ضروری افزونه (fallback بدون build)
          cp manifest.json clean-extension/ 2>/dev/null || echo "Warning: manifest.json missing"
          cp public/background.js clean-extension/ 2>/dev/null || echo "Warning: background.js missing"
          cp public/index.html clean-extension/ 2>/dev/null || echo "Warning: index.html missing"
          
          # اگر dist/ وجود داشت، bundle.js رو اضافه کن
          if [ -f "dist/bundle.js" ]; then
            cp dist/bundle.js clean-extension/ 2>/dev/null
          else
            echo "No bundle.js - skipping (use fallback)"
          fi
          
          # کپی icons
          if [ -d "public/icons" ]; then
            mkdir -p clean-extension/icons
            cp public/icons/* clean-extension/icons/ 2>/dev/null || echo "Warning: icons missing"
          fi
          
          # حذف هر فایل اضافی (strict clean)
          cd clean-extension
          rm -f README* LICENSE* .gitignore* package* tsconfig* webpack* tailwind*
          rm -rf src node_modules .github .idea .vscode
          cd ..
          
          echo "=== Clean extension folder contents ==="
          ls -la clean-extension/

      - name: ZIP the clean folder (root files only)
        run: |
          cd clean-extension
          zip -r ../proxy-extension-v${{ github.ref_name }}.zip *
          cd ..
          echo "=== ZIP file contents (should be clean) ==="
          unzip -l ../proxy-extension-v${{ github.ref_name }}.zip

      - name: Upload ZIP as artifact (for testing)
        uses: actions/upload-artifact@v4
        with:
          name: clean-zip-output
          path: proxy-extension-v${{ github.ref_name }}.zip

      - name: Create Release with clean ZIP (no auto source)
        uses: softprops/action-gh-release@v2
        with:
          files: proxy-extension-v${{ github.ref_name }}.zip
          tag_name: ${{ github.ref_name }}
          name: "v${{ github.ref_name }} - Clean Extension ZIP (Install Only)"
          body: |
            ### Clean ZIP for Chrome Extension (No Full Project Files)
            
            **This ZIP contains ONLY extension files:**
            - manifest.json
            - background.js
            - index.html
            - bundle.js (if built)
            - icons/
            
            **No:** src/, README, LICENSE, node_modules, .github, etc.
            
            **Install Steps:**
            1. Download ZIP
            2. Unzip (files in root)
            3. Go to `chrome://extensions/`
            4. Enable Developer mode
            5. Click "Load unpacked" and select the unzipped folder
            
            **Test:** Host: `proxy.example.com`, Port: `1080`, Type: SOCKS5.
            
            Check Actions tab for logs if issues.
          generate_release_notes: false  # Disable auto ZIP/source code
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
